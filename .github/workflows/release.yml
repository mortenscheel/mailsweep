name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual trigger for testing

jobs:
  build-and-upload:
    name: Build and upload
    permissions:
      contents: write  # This allows creating and uploading to releases
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: mailsweep-linux-amd64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: mailsweep-macos-amd64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: mailsweep-macos-arm64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: mailsweep-windows-amd64.exe

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Rename binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/mailsweep ${{ matrix.name }}
          
      - name: Rename binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/mailsweep.exe ${{ matrix.name }}
          
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.name }}
          asset_name: ${{ matrix.name }}
          tag: ${{ github.ref }}
          overwrite: true

  create-release:
    name: Create Release
    permissions:
      contents: write  # This allows creating releases
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Generate Changelog
        id: changelog
        run: |
          echo "## What's Changed" > CHANGELOG.md
          # Check if there's a previous tag to compare against
          if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
            # If previous tag exists, use it for the changelog
            git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"* %s" >> CHANGELOG.md
          else
            # If this is the first tag, just list all commits
            git log --pretty=format:"* %s" >> CHANGELOG.md
          fi
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false